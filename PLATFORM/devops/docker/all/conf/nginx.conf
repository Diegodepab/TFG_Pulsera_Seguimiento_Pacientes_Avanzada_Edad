user  nginx;
worker_processes  auto;

error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;

# Maximum open file descriptors per process;
# should be > worker_connections.
worker_rlimit_nofile 40000;
load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;

events {
  worker_connections  20000;
  multi_accept        on;
  use                 epoll;
}


http {
  include /etc/nginx/mime.types;

  # map $sent_http_content_type $cacheable_types {
  #     "image/jpeg"         "max-age=2592000, public";
  #     "image/pjpeg"        "max-age=2592000, public";
  #     "image/png"          "max-age=2592000, public";
  #     "image/gif"          "max-age=2592000, public";
  #     "image/svg+xml"      "max-age=2592000, public";
  #     "image/webp"         "max-age=2592000, public";
  #     "image/bmp"          "max-age=2592000, public";
  #     "model/gltf-binary"  "max-age=2592000, public";
  #     default              "";
  # }

  map $sent_http_content_type $expires {
    default                 off;
    image/jpeg              30d;
    image/svg+xml           30d;
    model/gltf-binary       30d;
  }

  expires $expires;

  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  sendfile     on;
  tcp_nopush   on;
  tcp_nodelay  on;

  keepalive_timeout  65;

  ##
  # Gzip Settings
  ##

  gzip on;
  gzip_buffers 16 16k;
  gzip_comp_level 5; #Good compromise between size and cpu usage.
  gzip_http_version 1.1;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  gzip_min_length 256;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy
    model/gltf+json;
    # text/html is always compressed by HttpGzipModule

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  gzip_vary on;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  gzip_proxied any;
  ## No need for regexps. See
  ## http://wiki.nginx.org/NginxHttpGzipModule#gzip_disable
  gzip_disable msie6;

  include /etc/nginx/conf.d/*.conf;
}
